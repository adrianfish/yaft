(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['edit_message'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n        <input type=\"checkbox\" id=\"yaft_send_email_checkbox\" name=\"sendEmail\" value=\"true\" checked/>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "send_email_alert_label", options) : helperMissing.call(depth0, "translate", "send_email_alert_label", options)))
    + "\n        <br />\n        <br />\n        ";
  return buffer;
  }

function program3(depth0,data,depth1) {
  
  var buffer = "", stack1, helper;
  buffer += "\n        <div id=\"file_"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">\n            <span>";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</span>\n            <a href=\"#\" onclick=\"yaft.utils.removeAttachment('";
  if (helper = helpers.resourceId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.resourceId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "','"
    + escapeExpression(((stack1 = ((stack1 = (depth1 && depth1.message)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "','file_"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "');\" title=\"Delete attachment\"><img src=\"/library/image/silk/cross.png\" width=\"16\" height=\"16\"/></a>\n            <br />\n        </div>\n        ";
  return buffer;
  }

  buffer += "<div id=\"yaft_reply_container\">\n    <form id=\"yaft_message_form\" method=\"POST\" action=\"/portal/tool/";
  if (helper = helpers.placementId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.placementId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/messages\">\n        <h4>Type your message</h4>\n        <br />\n        <input name=\"status\" type=\"hidden\" size=\"48\" value=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.message)),stack1 == null || stack1 === false ? stack1 : stack1.status)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\"/>\n        <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "subject_label", options) : helperMissing.call(depth0, "translate", "subject_label", options)))
    + "</span>\n        <br />\n        <input name=\"subject\" type=\"text\" size=\"48\" value=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.message)),stack1 == null || stack1 === false ? stack1 : stack1.subject)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\"/>\n        <br />\n        <br />\n        <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "message_label", options) : helperMissing.call(depth0, "translate", "message_label", options)))
    + ": *</span>\n        <br />\n        <textarea name=\"content\" id=\"yaft_message_editor\" cols=\"100\" rows=\"5\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.message)),stack1 == null || stack1 === false ? stack1 : stack1.content)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</textarea>\n        <br />\n        <br />\n        ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.canSendAlerts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        <span id=\"current_attachments_label\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "current_attachments_label", options) : helperMissing.call(depth0, "translate", "current_attachments_label", options)))
    + "</span>\n        <br />\n        <br />\n        ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.filteredAttachments), {hash:{},inverse:self.noop,fn:self.programWithDepth(3, program3, data, depth0),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        <br />\n\n        <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "add_attachments_label", options) : helperMissing.call(depth0, "translate", "add_attachments_label", options)))
    + "</span>\n        <br />\n        <input id=\"yaft_attachment\" name=\"attachment\" type=\"file\" class=\"multi\"/>\n        <br/>\n\n        <input type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "save_label", options) : helperMissing.call(depth0, "translate", "save_label", options)))
    + "\"/>\n        <input type=\"button\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "cancel_label", options) : helperMissing.call(depth0, "translate", "cancel_label", options)))
    + "\" onclick=\"return yaft.switchState('";
  if (helper = helpers.viewMode) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.viewMode); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "',{'messageId':'"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.message)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "'})\"/>\n\n        <input type=\"hidden\" name=\"forumId\" value=\"";
  if (helper = helpers.currentForumId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.currentForumId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n        <input type=\"hidden\" name=\"siteId\" value=\"";
  if (helper = helpers.siteId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n        <input type=\"hidden\" name=\"discussionId\" value=\"";
  if (helper = helpers.currentDiscussionId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.currentDiscussionId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n        <input type=\"hidden\" name=\"messageId\" value=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.message)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\"/>\n        <input type=\"hidden\" name=\"viewMode\" value=\"";
  if (helper = helpers.viewMode) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.viewMode); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\"/>\n    </form>\n</div>\n";
  return buffer;
  });
})();
